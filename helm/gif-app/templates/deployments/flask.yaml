apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-flask
  labels:
    app: flask-app
spec:
  replicas: {{ .Values.flask.replicas }}
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      {{- if .Values.vault.enabled }}
      serviceAccountName: {{ .Values.vault.serviceAccount }}
      volumes:
        - name: secrets-store-db
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: gifapp-vault-database
      {{- end }}
      containers:
        - name: flask-app
          image: "{{ .Values.flask.image.repository }}:{{ .Values.flask.image.tag }}"
          imagePullPolicy: {{ .Values.flask.image.pullPolicy }}
          {{- if .Values.vault.enabled }}
          volumeMounts:
            - name: secrets-store-db
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}
          ports:
            - containerPort: {{ .Values.flask.service.targetPort }}
              name: http
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-flask-config
            - secretRef:
                name: {{ .Release.Name }}-mysql-secrets
